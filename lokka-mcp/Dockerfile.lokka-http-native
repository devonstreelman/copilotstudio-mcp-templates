FROM node:20-alpine

# Install git and wget for health checks
RUN apk add --no-cache git wget

# Set working directory
WORKDIR /app

# Clone Lokka repository
RUN git clone https://github.com/merill/lokka.git .

# Copy our modified files
WORKDIR /app/src/mcp

# Update package.json with newer MCP SDK and express
RUN sed -i 's/"@modelcontextprotocol\/sdk": "\^1\.7\.0"/"@modelcontextprotocol\/sdk": "^1.15.1"/' package.json && \
    sed -i 's/"zod": "\^3\.24\.2"/"express": "^4.18.2",\n    "zod": "^3.24.2"/' package.json && \
    sed -i 's/"typescript": "\^5\.8\.2"/"@types\/express": "^4.17.17",\n    "typescript": "^5.8.2"/' package.json

# Install dependencies
RUN npm install

# Replace STDIO transport with HTTP transport in main.ts
RUN sed -i 's/import { StdioServerTransport } from "@modelcontextprotocol\/sdk\/server\/stdio.js";/import { StreamableHTTPServerTransport } from "@modelcontextprotocol\/sdk\/server\/streamableHttp.js";\nimport express from "express";/' src/main.ts && \
    sed -i 's/const transport = new StdioServerTransport();/\/\/ Create Express app\n  const app = express();\n  app.use(express.json());\n\n  \/\/ Create HTTP transport\n  const transport = new StreamableHTTPServerTransport({\n    sessionIdGenerator: undefined \/\/ stateless for Copilot Studio\n  });/' src/main.ts && \
    sed -i 's/await server.connect(transport);/await server.connect(transport);\n\n  \/\/ Setup HTTP routes\n  app.post("\/mcp", async (req, res) => {\n    console.log("Received MCP request:", req.body);\n    try {\n      await transport.handleRequest(req, res, req.body);\n    } catch (error) {\n      console.error("Error handling MCP request:", error);\n      if (!res.headersSent) {\n        res.status(500).json({\n          jsonrpc: "2.0",\n          error: {\n            code: -32603,\n            message: "Internal server error",\n          },\n          id: null,\n        });\n      }\n    }\n  });\n\n  \/\/ Health check endpoint\n  app.get("\/health", (req, res) => {\n    res.json({\n      status: "healthy",\n      service: "lokka-mcp-http",\n      timestamp: new Date().toISOString()\n    });\n  });\n\n  \/\/ Start HTTP server\n  const PORT = process.env.PORT || 5811;\n  app.listen(PORT, () => {\n    console.log(\`Lokka MCP HTTP Server listening on port \${PORT}\`);\n  });/' src/main.ts

# Build the project
RUN npm run build

# Create necessary directories
RUN mkdir -p /root/.local/share && \
    mkdir -p /root/.config && \
    mkdir -p /root/.cache

# Set environment variables
ENV HOME=/root
ENV TMPDIR=/tmp
ENV PORT=5811

# Expose the port
EXPOSE 5811

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:5811/health || exit 1

# Start Lokka HTTP server
CMD ["npm", "start"]